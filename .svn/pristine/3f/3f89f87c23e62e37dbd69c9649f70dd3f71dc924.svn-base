<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Http\Requests;
use App\Http\Controllers\Controller;

use App\Http\Requests\auth\RegisterRequest;
use App\Http\Requests\EditRegisterDoctorRequest;

use Auth;

use App\Banner;
use App\SocialMedia;
use App\FriendlySites;
use App\News;
use App\VGallery;
use App\PGalleryImages;
use App\Page;
use App\User;
use App\ContactUs;
use App\VGalleryAlbums;
use App\PGallery;
use App\Comments;

use Laracasts\Flash\Flash;

class HomeController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index()
    {
        $first_banner = Banner::where('position', '=', 1)->get()[0];
        $second_banner = Banner::where('position', '=', 1)->get()[1];
        $third_banner = Banner::where('position', '=', 1)->get()[2];
        $social = SocialMedia::all();
        $sites = FriendlySites::all();
        $news = News::where('importance', '=', 1)->get();
        $last_news = News::orderBy('created_at', 'desc')->first();
        $last_photo = PGalleryImages::orderBy('created_at', 'desc')->take(5)->get();
        $last_video = VGallery::orderBy('created_at', 'desc')->take(3)->get();
        return view('frontend.home', compact('second_banner', 'first_banner', 'third_banner', 'social', 'sites', 'news', 'last_news', 'last_video', 'last_photo'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create()
    {
        $users = User::where('role_id', '!=', 1)->get();
        $workers_users = User::where('role_id', '=', 2)->get();
        $news = News::all();
        $edu = News::where('category_id', '=', 2)->get();
        $ach = News::where('category_id', '=', 3)->get();
        $messages = ContactUs::all();
        $valbums = VGalleryAlbums::all();
        $palbums = PGallery::all();
        $yesterday = date('Y/m/d', strtotime("-1 days"));
        $old_messages = ContactUs::where('created_at', '<', $yesterday)->get();
        $comments = Comments::all();
        $old_comments = Comments::where('created_at', '<', $yesterday)->get();
        $last_ten_news = News::orderBy('created_at', 'desc')->take(10)->get();
        return view('backend.dashboard', compact('users', 'news', 'edu', 'ach', 'messages', 'valbums', 'palbums', 'old_messages', 'workers_users', 'last_ten_news', 'comments', 'old_comments'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  Request  $request
     * @return Response
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function edit()
    {
        $user_id = Auth::user()->id;
        $admin_user = User::where('role_id', '=', $user_id)->first();
        return view('backend.admin.edit_form', compact('admin_user'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  Request  $request
     * @param  int  $id
     * @return Response
     */
    public function update(EditRegisterDoctorRequest $request)
    {
        $user_id = Auth::user()->id;
        $user = User::find($user_id);
        $emails = User::where('id', '!=', $user_id)->get();
        $user->name = $request->input('name');
        foreach ($emails as $key => $value) {
            if ($value->email ==  $request->input('email')){
                Flash::error('تم تفعيل هذا البريد من قبل');
                return redirect('admin/register/users/' . $id . '/edit');
            }
            else{
                $user->email = $request->input('email');
            }
        }
        if (!empty($request->input('password'))){
            if ($request->input('password') == $request->input('password_confirmation')){
                $user->password = bcrypt($request->input('password'));
            }
            else{
                Flash::error('كلمة السر غير متابقة للتأكيد');
                return redirect('admin/edit/info');
            }
        }
        $user->update();
        Flash::success('تم التعديل بنجاح');

        return redirect('admin/edit/info');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function destroy($id)
    {
        //
    }
}
